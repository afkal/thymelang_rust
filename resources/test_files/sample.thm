/* Sample script file to demonstrate Thymelang feature */

/* Comments may be either
multiline, or:
*/ 
// single line 

// Thyme is static strong typed language
// Variable definition: let VAR = VALUE SEMICOLON
// let is the keyword for defining variables
// These variables are GLOBAL since they are defined on the module level
// TBD: Shold Globals be actually supported at all???
// TBD with our without let keyword???
a_int = 5; // Integer
// or let a_int = 5;
a_float = 5.6; // Float
string = "test_string";
array = [1,2,3,4];

// Struct?
TestStruct = {
    a = 4;
    b = 3;
};

// function definition
fn func (a: int, b: int): int {
    a_int = a_int+1;
    b_float = a_float*2.0;
};

// closure definition
let closure = {
    a_int = a_int+1;
    b_float = a_float*2.0;
};

// closure with arguments and return value
let sum_ints(a: int, b: int): int = {
    return(a+b);
};

// Program will start running from main()
fn main() {
    // print statement:
    print(sum_ints(2,3)); // 5
    // if statement
    if(a_int > 10) {
      print("a_int is bigger than 10");
    } else {
      print("a_int is smaller or equal to 10");
    }
};

